name: IPTV Processor CI

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      force_refresh:
        description: '强制刷新所有源'
        required: false
        default: 'false'

env:
  OUTPUT_DIR: './output'

jobs:
  process-iptv:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    # 1. 检出代码（使用最新版本）
    - uses: actions/checkout@v4
    
    # 2. 设置Python环境
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    # 3. 安装系统依赖
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    # 4. 安装Python依赖
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas
    
    # 5. 创建模板文件
    - name: Create demo template
      run: |
        mkdir -p output
        cat > demo.txt << 'EOL'
央视频道,#genre#
CCTV-1综合,http://example.com/cctv1
CCTV-2财经,http://example.com/cctv2
卫视频道,#genre#
湖南卫视,http://example.com/hunan
浙江卫视,http://example.com/zhejiang
EOL
    
    # 6. 运行IPTV处理器
    - name: Run IPTV Processor
      run: |
        python iptv_processor.py
      env:
        MAX_FETCH_THREADS: 8
        TIMEOUT: 10
    
    # 7. 验证输出文件（修复后的版本）
    - name: Validate outputs
      run: |
        echo "=== 检查输出文件 ==="
        ls -la output/
        [ -f output/iptv.txt ] && echo "✅ iptv.txt 存在"
        [ -f output/iptv.m3u ] && echo "✅ iptv.m3u 存在"
        [ -s output/iptv.txt ] && echo "✅ iptv.txt 非空" || exit 1
        [ -s output/iptv.m3u ] && echo "✅ iptv.m3u 非空" || exit 1
    
    # 8. 上传产物（使用最新版本v4）
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: iptv-outputs
        path: |
          output/iptv.txt
          output/iptv.m3u
        retention-days: 7
        if-no-files-found: error

name: Tv_search

on:
  workflow_dispatch:
    inputs:
      speed_threshold:
        description: '速度阈值 (MB/s)'
        required: true
        default: '1.0'
        type: string
      categories:
        description: '频道分类 (逗号分隔)'
        required: true
        default: '央视频道'
        type: string
  schedule:
    - cron: '0 5 * * *'
    - cron: '0 12 * * *'
    - cron: '0 17 * * *'
  push:
    branches: [ main, master ]
    paths:
      - '**.py'
      - '**.txt'
      - '.github/workflows/**'

env:
  PYTHON_VERSION: '3.9'
  MAX_RETRIES: 3
  WORKFLOW_TIMEOUT_MINUTES: 45

jobs:
  crawl-tv-streams:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ env.WORKFLOW_TIMEOUT_MINUTES }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb libxss1 libappindicator1 libindicator7
        
        # 安装字体支持中文显示
        sudo apt-get install -y fonts-wqy-microhei fonts-wqy-zenhei

    - name: Install Chrome and ChromeDriver
      run: |
        # 安装 Chrome
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # 获取 Chrome 版本并下载对应版本的 ChromeDriver
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
        CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d'.' -f1)
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_MAJOR_VERSION")
        wget -q "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests lxml selenium webdriver-manager
        pip install retrying python-dotenv

    - name: Create channel list files
      run: |
        # 创建示例频道文件（如果不存在）
        if [ ! -f "央视频道.txt" ]; then
          cat > "央视频道.txt" << EOF
CCTV1
CCTV2
CCTV5
CCTV6
CCTV8
湖南卫视
浙江卫视
东方卫视
江苏卫视
北京卫视
EOF
        fi
        
        # 根据输入参数创建其他频道文件
        IFS=',' read -ra CATEGORIES <<< "${{ github.event.inputs.categories || '央视频道' }}"
        for category in "${CATEGORIES[@]}"; do
          if [ ! -f "${category}.txt" ]; then
            echo "创建默认 ${category}.txt 文件"
            echo "频道1" > "${category}.txt"
            echo "频道2" >> "${category}.txt"
          fi
        done

    - name: Run TV Search crawler
      id: run_crawler
      env:
        SPEED_THRESHOLD: ${{ github.event.inputs.speed_threshold || '1.0' }}
        CATEGORIES: ${{ github.event.inputs.categories || '央视频道' }}
        HTTP_PROXY: ${{ secrets.PROXY_SERVER }}
        MAX_RETRIES: ${{ env.MAX_RETRIES }}
      run: |
        echo "🎬 开始执行Tv_search"
        echo "📊 运行参数:"
        echo "  速度阈值: $SPEED_THRESHOLD MB/s"
        echo "  频道分类: $CATEGORIES"
        echo "  代理设置: ${HTTP_PROXY:-无}"
        echo "  最大重试次数: $MAX_RETRIES"
        echo "  当前时间: $(date '+%Y-%m-%d %H:%M:%S')"
        
        # 带重试机制的运行
        for i in $(seq 1 $MAX_RETRIES); do
          echo "🔄 尝试第 $i 次运行..."
          python Tv_search.py && break || sleep 30
        done

        # 设置输出变量
        if [ -f "live.txt" ]; then
          LINE_COUNT=$(wc -l < live.txt)
          echo "line_count=$LINE_COUNT" >> $GITHUB_OUTPUT
          echo "file_exists=true" >> $GITHUB_OUTPUT
        else
          echo "file_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload live streams file
      if: steps.run_crawler.outputs.file_exists == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: tv-live-streams-${{ github.run_id }}
        path: |
          live.txt
          tv_search.log
          tv_search_debug.log
        retention-days: 7

    - name: Commit and push if changed
      if: steps.run_crawler.outputs.file_exists == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 检查文件是否有变化
        git add live.txt
        if git diff --cached --quiet; then
          echo "📝 没有检测到直播源变化"
        else
          git commit -m "🔄 Tv_search自动更新直播源 [$(date +'%Y-%m-%d %H:%M')] - 找到 ${{ steps.run_crawler.outputs.line_count }} 个源"
          git push
          echo "🚀 电视直播源已更新并推送到仓库"
          echo "📊 本次更新有效直播源: ${{ steps.run_crawler.outputs.line_count }} 个"
        fi

    - name: Send success notification
      if: success() && steps.run_crawler.outputs.file_exists == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `✅ TV搜索成功完成！\n找到 ${{ steps.run_crawler.outputs.line_count }} 个有效直播源\n工作流运行: ${{ github.run_id }}`
          });

    - name: Send failure notification
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `❌ TV搜索执行失败！\n工作流运行: ${{ github.run_id }}\n请检查日志获取详细信息`
          });
